apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: >
      {"apiVersion":"tekton.dev/v1beta1","kind":"Task","metadata":{"annotations":{},"creationTimestamp":"2023-04-14T12:16:36Z","generation":17,"managedFields":[{"apiVersion":"tekton.dev/v1beta1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:kubectl.kubernetes.io/last-applied-configuration":{}}},"f:spec":{".":{},"f:params":{},"f:workspaces":{}}},"manager":"kubectl-client-side-apply","operation":"Update","time":"2023-04-14T12:16:36Z"},{"apiVersion":"tekton.dev/v1beta1","fieldsType":"FieldsV1","fieldsV1":{"f:spec":{"f:results":{},"f:steps":{}}},"manager":"Mozilla","operation":"Update","time":"2023-04-14T19:02:16Z"}],"name":"podman-remote","namespace":"tekton-hacking","resourceVersion":"298293","uid":"ae64d21a-4629-4916-8894-60b120eaae96"},"spec":{"params":[{"description":"Reference
      of the image will
      produce.","name":"IMAGE","type":"string"},{"default":"latest","name":"TAG","type":"string"},{"default":"./Dockerfile","description":"Path
      to the Dockerfile to
      build.","name":"DOCKERFILE","type":"string"},{"default":"aws_keys_pairs.pem","name":"PRIVATE_KEY","type":"string"},{"default":"ec2-user","name":"SSH_USER","type":"string"},{"name":"HOST","type":"string"},{"default":".","description":"Path
      to the directory to use as
      context.","name":"CONTEXT","type":"string"}],"results":[{"description":"Image
      repository where the built image would be pushed
      to","name":"IMAGE_URL","type":"string"}],"steps":[{"image":"quay.io/rcook/tools:podman-remote1","name":"remote-add","resources":{},"script":"podman-remote
      system connection add remote-builder --identity
      `pwd`/$(params.PRIVATE_KEY)
      ssh://$(params.SSH_USER)@$(params.HOST)/run/user/1000/podman/podman.sock
      \u0026\u0026 podman-remote build -f $(params.DOCKERFILE) -t
      $(params.IMAGE):$(params.TAG) $(params.CONTEXT) \u0026\u0026 
      podman-remote push
      $(params.IMAGE):$(params.TAG)\n","workingDir":"$(workspaces.source.path)"},{"image":"quay.io/rcook/tools:podman-remote1","name":"url","resources":{},"script":"echo
      \"$(params.IMAGE)\" | tee
      /tekton/results/IMAGE_URL","workingDir":"$(workspaces.source.path)"}],"workspaces":[{"name":"source"}]}}
  creationTimestamp: '2023-04-16T12:11:53Z'
  generation: 8
  managedFields:
    - apiVersion: tekton.dev/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            .: {}
            'f:kubectl.kubernetes.io/last-applied-configuration': {}
        'f:spec':
          .: {}
          'f:params': {}
          'f:workspaces': {}
      manager: kubectl-create
      operation: Update
      time: '2023-04-16T12:11:53Z'
    - apiVersion: tekton.dev/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        'f:spec':
          'f:results': {}
          'f:steps': {}
      manager: Mozilla
      operation: Update
      time: '2023-04-17T16:18:04Z'
  name: podman-remote
  namespace: tekton-hacking
  resourceVersion: '116942034'
  uid: 6dc72ddf-2884-40e9-a05e-247d009a47ac
spec:
  params:
    - description: Reference of the image will produce.
      name: IMAGE
      type: string
    - default: latest
      name: TAG
      type: string
    - default: ./Dockerfile
      description: Path to the Dockerfile to build.
      name: DOCKERFILE
      type: string
    - default: aws_keys_pairs.pem
      name: PRIVATE_KEY
      type: string
    - default: ec2-user
      name: SSH_USER
      type: string
    - name: HOST
      type: string
    - default: .
      description: Path to the directory to use as context.
      name: CONTEXT
      type: string
  results:
    - description: Image repository where the built image would be pushed to
      name: IMAGE_URL
      type: string
    - description: Image Digest
      name: IMAGE_DIGEST
      type: string
  steps:
    - image: 'quay.io/rcook/tools:podman-remote1'
      name: remote-add
      resources: {}
      script: >
        podman-remote system connection add remote-builder --identity
        `pwd`/$(params.PRIVATE_KEY)
        ssh://$(params.SSH_USER)@$(params.HOST)/run/user/1000/podman/podman.sock
        && podman-remote build -f $(params.DOCKERFILE) -t
        $(params.IMAGE):$(params.TAG) $(params.CONTEXT) && chmod 0600
        `pwd`/$(params.PRIVATE_KEY)
      workingDir: $(workspaces.source.path)
    - image: 'quay.io/rcook/tools:podman-remote1'
      name: ''
      resources: {}
      script: >-
        ssh -o StrictHostKeychecking=no -i `pwd`/$(params.PRIVATE_KEY)
        $(params.SSH_USER)@$(params.HOST) "mkdir ~/.docker" && scp -o
        StrictHostKeychecking=no -i `pwd`/$(params.PRIVATE_KEY)
        ~/.docker/config.json
        $(params.SSH_USER)@$(params.HOST):~/.docker/config.json
      workingDir: $(workspaces.source.path)
    - image: 'quay.io/rcook/tools:podman-remote1'
      name: push
      resources: {}
      script: >-
        ssh -o StrictHostKeychecking=no -i `pwd`/$(params.PRIVATE_KEY)
        $(params.SSH_USER)@$(params.HOST) "podman push --digestfile /tmp/digest
        $(params.IMAGE):$(params.TAG)"
      workingDir: $(workspaces.source.path)
    - image: 'quay.io/rcook/tools:podman-remote1'
      name: digest
      resources: {}
      script: >-
        ssh -o StrictHostKeychecking=no -i `pwd`/$(params.PRIVATE_KEY)
        $(params.SSH_USER)@$(params.HOST) "cat /tmp/digest" | tee
        /tekton/results/IMAGE_DIGEST
      workingDir: $(workspaces.source.path)
    - image: 'quay.io/rcook/tools:podman-remote1'
      name: url
      resources: {}
      script: echo "$(params.IMAGE)" | tee /tekton/results/IMAGE_URL
      workingDir: $(workspaces.source.path)
  workspaces:
    - name: source
